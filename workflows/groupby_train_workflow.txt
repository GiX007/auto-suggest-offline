GROUPBY COLUMN PREDICTION WORKFLOW (groupby_train)

PHASE 0: ENTRY POINT
---------------------
Function: run_groupby_prediction(..., mode='train')
File: src/main.py  
Purpose: Orchestrates the full training pipeline for GroupBy column prediction

PHASE 1: LOAD SAMPLES
----------------------
1. load_operator_samples(groupby_dir, 'groupby')
   - File: src/data/sample_loader.py
   - Loads all sample folders from the groupby/ directory

2. load_sample(...)
   - File: src/data/sample_loader.py
   - Loads:
     * 'input_table' from data.csv
     * 'params' from param.json

PHASE 2: PROCESS SAMPLES
--------------------------
3. process_groupby_samples(groupby_samples)
   - File: src/features/groupby_features.py
   - Extracts:
     * input_table
     * groupby_columns (ground truth dimensions)
     * agg_columns (ground truth measures)
   - Filters invalid or incomplete samples
   - Output: List of processed samples

PHASE 3: PREPARE TRAINING DATA
-------------------------------
4. prepare_groupby_training_data(processed_samples)
   - File: src/models/groupby_model.py
   - For each column:
     * extract_column_features(...) (from src/features/groupby_features.py)
     * Label as 1 if column in groupby_columns, else 0
   - Output: List[Dict] of features, List[int] of labels

PHASE 4: TRAIN MODEL
---------------------
5. train_groupby_model(features_list, labels)
   - File: src/models/groupby_model.py
   - Converts to DataFrame
   - Splits into train/test sets
   - Trains GradientBoostingClassifier
   - Computes:
     * Train/Test Accuracy and Precision
     * precision@k and ndcg@k
     * Feature importance
   - Saves:
     * results/metrics/all_operators_metrics.csv
     * results/figures/groupby_feature_importance.png
   - Output: Trained model and feature names

PHASE 5: SAVE MODEL
---------------------
6. save_model((model, feature_names), path)
   - File: src/utils/model_utils.py
   - Saves trained model to disk (e.g. models/groupby_column_model.pkl)


COMMAND TO RUN
---------------------
To execute the full pipeline described above, run the following command:

    python -m src.main --operator groupby --mode train

---------------------
