JOIN RECOMMENDATION WORKFLOW (join_predict)

PHASE 0: ENTRY POINT
---------------------
Function: run_join_prediction(..., mode='predict')
File: src/main.py  
Purpose: Orchestrates the join column + join type prediction pipeline for unseen tables

→ Calls:
   predict_on_files(...)
   - File: src/utils/join_pipeline.py
   - This function handles table loading, model loading, join column/type prediction, and displaying results

PHASE 1: LOAD TEST TABLES
--------------------------
1. pd.read_csv(left_file), pd.read_csv(right_file)
   - File: src/utils/join_pipeline.py (inside predict_on_files)
   - Reads user-specified CSVs passed via --left_file and --right_file
   - Prints:
     * Table shape (rows × columns)
     * First 3 sample rows from each table

PHASE 2: LOAD TRAINED MODELS
-----------------------------
2. load_join_models(model_dir)
   - File: src/utils/join_pipeline.py
   - Internally uses load_model(...) from src/utils/model_utils.py
   - Loads:
     * models/join_column_model.pkl → (join column model, feature names)
     * models/join_type_model.pkl → (join type model, feature names, label encoder)
   - Stores loaded models in a dictionary for prediction

PHASE 3: GENERATE JOIN RECOMMENDATIONS
---------------------------------------
3. recommend_joins(models, left_table, right_table, top_k)
   - File: src/utils/join_pipeline.py
   - Internally uses:
     * predict_join_columns(...) (from src/models/join_col_model.py)
     * predict_join_type(...) (from src/models/join_type_model.py)
     * extract_join_type_features(...) (from src/models/join_type_model.py)
   - For each candidate pair of columns:
     * Predicts joinability and scores it
     * Predicts best join type and confidence
   - Combines results into structured join recommendations:
     * left_columns, right_columns, column confidence
     * predicted join type, join type confidence, and alternatives

PHASE 4: DISPLAY RECOMMENDATIONS
---------------------------------
4. display_join_recommendations(recommendations, top_k)
   - File: src/utils/join_pipeline.py
   - Prints:
     * Ranked join column and type predictions with scores
     * Example Pandas code using `pd.merge(...)` based on top recommendation

COMMAND TO RUN
---------------------
To execute the full recommendation workflow on new tables:

    python -m src.main --operator join --mode predict \
        --left_file data/test_data/join_customers.csv \
        --right_file data/test_data/join_orders.csv

---------------------
